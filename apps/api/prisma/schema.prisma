// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DIRECT_URL")
}



// This model maps to the existing `users` table created by Supabase Auth.
// Prisma will not try to create or migrate this table.
model User {
  id      String   @id @map("id")
  emails  Email[]
  
  @@map("users")
}

model Email {
  id              String    @id @default(cuid())
  userId          String
  user            User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  gmailMessageId  String
  gmailThreadId   String?

  subject         String?
  snippet         String?
  fromData        Json?     @map("from_data")
  toData          Json?     @map("to_data")
  ccData          Json?     @map("cc_data")
  bccData         Json?     @map("bcc_data")
  
  bodyHtml        String?   @map("body_html")
  bodyText        String?   @map("body_text")

  isRead          Boolean   @default(false)
  labels          String[]
  receivedAt      DateTime? @map("received_at")

  createdAt       DateTime  @default(now()) @map("created_at")
  updatedAt       DateTime  @updatedAt @map("updated_at")

  @@unique([userId, gmailMessageId])
  @@map("emails")
}